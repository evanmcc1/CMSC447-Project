<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
 	   <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css"
   integrity="sha512-M2wvCLH6DSRazYeZRIm1JnYyh22purTM+FDB5CsyxtQJYeKq83arPe5wgbNmcFXGqiSH2XR8dT/fJISVA1r/zQ=="
   crossorigin=""/>
           <script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"
   integrity="sha512-lInM/apFSqyy1o6s89K4iQUKg6ppXEgsVxT35HbzUupEVRh2Eu9Wdl4tHj7dZO0s1uvplcYGmt3498TtHq+log=="
   crossorigin=""></script>
        <style>
                #places {height:100vh; width:17vw; float:left;padding-left:10px;overflow-y:scroll;}
                #mapid { height: 100vh; width: 80vw; float:right; }
                article{border-bottom:1px solid black;padding-bottom:10px;width:90%;font-family:sans-serif;}
                .preview{display:none;}
	</style>
    <title>Maps + Wikipedia Mashup</title>

  </head>

  <body>

    <!-- list of places goes here. I've set up some styles to use if you use the correct elements and classes -->
    <div id="places">
        <h2>Articles</h2>
    </div>

    <!-- actual map should be built out in here -->
    <div id="map">
        <div id="mapid">
        <script>
        var LAT = 39.25560152079427, LONG = -76.71099543571474, RAD= 10000
        // if('geolocation' in window.navigator) {
        //    window.navigator.geolocation.getCurrentPosition(function(position) {
        //            lat = position.coords.latitude;
        //            long = position.coords.longitude;
        //            mymap.setView([lat,long],15)
        //        });
        // }
        var mymap = L.map('mapid')
        var markers = [];
        var articles;
        var descriptions = new Object();
        var links = new Object();
        var open_article;
        L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}.png').addTo(mymap);
        mymap.setView([LAT,LONG],15);


        mymap.on('moveend', function (ev) {
            var moved = mymap.getCenter()
            var zoom = mymap.getZoom()
            update(moved['lat'],moved['lng'], RAD)
        });


        update(LAT,LONG,RAD);
        function update(lat, long, rad) {
            var update = new XMLHttpRequest();
            var url = "https://swe.umbc.edu/~huganir1/cs433/javascript/p3/server/wiki.php?";
            var params = "lat=" + lat + "&long=" + long + "&rad=" + rad;

            document.querySelector("div#places").innerHTML = '<h2>Articles</h2>'
            open_article = undefined

            update.open("GET", url + params);
            update.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            update.onreadystatechange = function() {
                if (update.readyState == 4 && update.status == 200) {
                    articles = JSON.parse(update.responseText)["query"];
                    if (articles != undefined) {
                        var all_articles = Object.values(articles["pages"])
                        art_div = document.querySelector("div#places");
                        for (i=0; i < markers.length; i++) {
                            markers[i].remove()
                        }
                        markers = []
                        for (i=0; i < all_articles.length; i++) {
                            var marker = L.marker([all_articles[i]['coordinates'][0]['lat'],
                                                    all_articles[i]['coordinates'][0]['lon']]);
                            b_lat_n = mymap.getBounds()._northEast.lat
                            b_lat_s = mymap.getBounds()._southWest.lat
                            b_lng_e = mymap.getBounds()._northEast.lng
                            b_lng_w = mymap.getBounds()._southWest.lng
                            m_lat = marker.getLatLng().lat
                            m_lng = marker.getLatLng().lng
                            if (m_lat > b_lat_s && m_lat < b_lat_n &&
                                m_lng > b_lng_w && m_lng < b_lng_e) {
                                marker.addTo(mymap)
                                markers.push(marker)
                                var link = "<a target='_blank' href='" +
                                                    all_articles[i]['fullurl'] +
                                                    "'>" + all_articles[i]['title'] + "<br/>";
                                var picture = "";
                                if (all_articles[i].hasOwnProperty('thumbnail')) {
                                    picture = "<img width='90%' src='" + all_articles[i]["thumbnail"]["source"] +
                                                    "' />'";
                                }
                                marker.bindPopup(link + picture);
                                if (all_articles[i]['extract'] != undefined) {
                                    descriptions[all_articles[i]['title']] = all_articles[i]['extract']
                                }
                                else {descriptions[all_articles[i]['title']]=''}
                                links[all_articles[i]['title']] = all_articles[i]['fullurl'];
                                var article_wrap = document.createElement("div");
                                var article_title = document.createElement("h4")
                                var article_line = document.createElement("hr")
                                article_wrap.className = "art";
                                article_title.className = "article_title";
                                article_title.innerHTML = all_articles[i]['title'];
                                article_wrap.appendChild(article_line);
                                article_wrap.appendChild(article_title);
                                document.querySelector("div#places").appendChild(article_wrap);

                            }
                        }
                    }
                    places_children = document.querySelector("div#places").childNodes;
                        for (i=1; i < places_children.length; i++) {
                            places_children[i].querySelector("h4").addEventListener('click', function (e){
                                if (open_article != undefined) {
                                    open_article.removeChild(open_article.lastChild)
                                    open_article.removeChild(open_article.lastChild)
                                }
                                open_article = e.target.parentNode
                                var desc = document.createElement("p");
                                desc.innerHTML = descriptions[open_article.querySelector("h4").innerHTML];
                                var link = document.createElement("a");
                                link.href = links[open_article.querySelector("h4").innerHTML]
                                link.target = "_blank"
                                link.innerHTML = "Read on Wikipedia";
                                open_article.appendChild(desc)
                                open_article.appendChild(link)
                        }, false)
                    }
                }
            };
            update.send();
        }

     </script>

     </div>
    </div>

  </body>
</html>
